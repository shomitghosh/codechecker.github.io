# Import Packages and Set Working Directory
library(readxl)
library(writexl)
library(svDialogs)
setwd("C:/Users/Sghosh9/OneDrive - CBRE, Inc/Desktop/Code Checker Trial")
# User inputs (Fund name, Argus Extract File name)
fundName <- dlgInput("Enter fund name:")$res
argus_fileName <- dlgInput("Enter Argus File Name")$res
yardi_tenancy <- read_excel("C:/Users/Sghosh9/OneDrive - CBRE, Inc/Desktop/Code Checker Trial/yardi-extract.xlsx", sheet = "TenancySchedule")
yardi_vacancy <- read_excel("C:/Users/Sghosh9/OneDrive - CBRE, Inc/Desktop/Code Checker Trial/yardi-extract.xlsx", sheet = "Vacancy")
knitr::opts_chunk$set(echo = TRUE)
library(readxl)
library(writexl)
library(svDialogs)
library(dplyr)
library(stringdist)
setwd("C:/Users/Sghosh9/OneDrive - CBRE, Inc/Desktop/Code Checker Trial")
fundName <- dlgInput("Enter fund name:")$res
#ydi_fileName <- dlgInput("Enter Yardi File Name")$res
argus_fileName <- dlgInput("Enter Argus File Name")$res
yardi_tenancy <- read_excel("C:/Users/Sghosh9/OneDrive - CBRE, Inc/Desktop/Code Checker Trial/yardi-extract.xlsx", sheet = "TenancySchedule")
yardi_vacancy <- read_excel("C:/Users/Sghosh9/OneDrive - CBRE, Inc/Desktop/Code Checker Trial/yardi-extract.xlsx", sheet = "Vacancy")
ten_cols <- c("PropertyCode","PropertyName","UnitCode","ContractCode","ContractName")
vac_cols <- c("PropertyCode","PropertyName","UnitCode")
yardi_tenClean <- yardi_tenancy[,ten_cols]
yardi_vacClean <- yardi_vacancy[,vac_cols]
yardi_vacClean$ContractCode <- yardi_vacClean$UnitCode
yardi_vacClean$ContractName <- "VACANT"
yardi <- rbind(yardi_tenClean,yardi_vacClean)
remove_leading_zeros <- function(x) {
# Check if string contains only digits
if (grepl("^[0-9]+$", x)) {
# Remove leading zeros using sub
return(sub("^0*", "", x))
} else {
# Return original string if it contains non-digits
return(x)
}
}
yardi$ContractCode <- lapply(yardi$ContractCode, remove_leading_zeros)
yardi$yardiPropLease <- paste(yardi$PropertyCode, yardi$ContractCode,sep="")
argus_raw <- read_excel(paste("C:/Users/Sghosh9/OneDrive - CBRE, Inc/Desktop/Code Checker Trial/",argus_fileName,".xlsx",sep = ""))
arg_cols <- c("Property Name", "External ID", "Lease ID", "Tenant Name", "Rental Value (ERV)")
argusClean <- argus_raw[,arg_cols]
argusClean$argPropLease <- paste(argusClean$`External ID`, argusClean$`Lease ID`, sep = "")
checker <- merge(argusClean, yardi, by.x = "argPropLease", by.y = "yardiPropLease", all.x = TRUE)
yardi$yardiPropUnit <- paste(yardi$PropertyCode, yardi$UnitCode, sep="")
checker2 <- merge(argusClean, yardi, by.x = "argPropLease", by.y = "yardiPropUnit", all.x = TRUE)
tempChecker <- checker[is.na(checker$PropertyCode),]
checker3 <- merge(checker, checker2, by.x = "argPropLease", by.y = "argPropLease",all.x = TRUE)
checker4 <- subset(checker3, subset = is.na(PropertyCode.x) & is.na(PropertyCode.y))
checker4 <- checker4[,c(1:6)]
colnames(checker4) <- c("ArgusPropLease","Property Name","Property Code","Lease ID","Tenant Name","Rental Value (ERV)")
checker4 <- unique(checker4)
View(checker4)
fundName <- dlgInput("Enter fund name:")$res
#ydi_fileName <- dlgInput("Enter Yardi File Name")$res
argus_fileName <- dlgInput("Enter Argus File Name")$res
yardi_tenancy <- read_excel("C:/Users/Sghosh9/OneDrive - CBRE, Inc/Desktop/Code Checker Trial/yardi-extract.xlsx", sheet = "TenancySchedule")
yardi_vacancy <- read_excel("C:/Users/Sghosh9/OneDrive - CBRE, Inc/Desktop/Code Checker Trial/yardi-extract.xlsx", sheet = "Vacancy")
ten_cols <- c("PropertyCode","PropertyName","UnitCode","ContractCode","ContractName")
vac_cols <- c("PropertyCode","PropertyName","UnitCode")
yardi_tenClean <- yardi_tenancy[,ten_cols]
yardi_vacClean <- yardi_vacancy[,vac_cols]
yardi_vacClean$ContractCode <- yardi_vacClean$UnitCode
yardi_vacClean$ContractName <- "VACANT"
yardi <- rbind(yardi_tenClean,yardi_vacClean)
remove_leading_zeros <- function(x) {
# Check if string contains only digits
if (grepl("^[0-9]+$", x)) {
# Remove leading zeros using sub
return(sub("^0*", "", x))
} else {
# Return original string if it contains non-digits
return(x)
}
}
yardi$ContractCode <- lapply(yardi$ContractCode, remove_leading_zeros)
yardi$yardiPropLease <- paste(yardi$PropertyCode, yardi$ContractCode,sep="")
argus_raw <- read_excel(paste("C:/Users/Sghosh9/OneDrive - CBRE, Inc/Desktop/Code Checker Trial/",argus_fileName,".xlsx",sep = ""))
arg_cols <- c("Property Name", "External ID", "Lease ID", "Tenant Name", "Rental Value (ERV)")
argusClean <- argus_raw[,arg_cols]
argusClean$argPropLease <- paste(argusClean$`External ID`, argusClean$`Lease ID`, sep = "")
checker <- merge(argusClean, yardi, by.x = "argPropLease", by.y = "yardiPropLease", all.x = TRUE)
yardi$yardiPropUnit <- paste(yardi$PropertyCode, yardi$UnitCode, sep="")
checker2 <- merge(argusClean, yardi, by.x = "argPropLease", by.y = "yardiPropUnit", all.x = TRUE)
tempChecker <- checker[is.na(checker$PropertyCode),]
checker3 <- merge(checker, checker2, by.x = "argPropLease", by.y = "argPropLease",all.x = TRUE)
checker4 <- subset(checker3, subset = is.na(PropertyCode.x) & is.na(PropertyCode.y))
checker4 <- checker4[,c(1:6)]
colnames(checker4) <- c("ArgusPropLease","Property Name","Property Code","Lease ID","Tenant Name","Rental Value (ERV)")
checker4 <- unique(checker4)
View(checker4)
errRate <- paste(round(nrow(checker4)/nrow(checker2)*100,2),"%")
write_xlsx(checker4, path = paste("mismatches-",fundName,"-err-",errRate,".xlsx",sep=""))
shiny::runApp('~/CodeChecker')
runApp('~/CodeChecker')
# Return the processed data
return(processedData)
processedData <- eventReactive(input$process, {
# Read the input Excel files
file1 <- readxl::read_excel(input$file1$datapath)
file2 <- readxl::read_excel(input$file2$datapath)
# Perform your calculations here
ten_cols <- c("PropertyCode","PropertyName","UnitCode","ContractCode","ContractName")
vac_cols <- c("PropertyCode","PropertyName","UnitCode")
yardi_tenClean <- file1[,ten_cols]
yardi_vacClean <- file1[,vac_cols]
yardi_vacClean$ContractCode <- yardi_vacClean$UnitCode
yardi_vacClean$ContractName <- "VACANT"
yardi <- rbind(yardi_tenClean,yardi_vacClean)
remove_leading_zeros <- function(x) {
# Check if string contains only digits
if (grepl("^[0-9]+$", x)) {
# Remove leading zeros using sub
return(sub("^0*", "", x))
} else {
# Return original string if it contains non-digits
return(x)
}
}
yardi$ContractCode <- lapply(yardi$ContractCode, remove_leading_zeros)
yardi$yardiPropLease <- paste(yardi$PropertyCode, yardi$ContractCode,sep="")
arg_cols <- c("Property Name", "External ID", "Lease ID", "Tenant Name", "Rental Value (ERV)")
argusClean <- file2[,arg_cols]
argusClean$argPropLease <- paste(argusClean$`External ID`, argusClean$`Lease ID`, sep = "")
checker <- merge(argusClean, yardi, by.x = "argPropLease", by.y = "yardiPropLease", all.x = TRUE)
yardi$yardiPropUnit <- paste(yardi$PropertyCode, yardi$UnitCode, sep="")
checker2 <- merge(argusClean, yardi, by.x = "argPropLease", by.y = "yardiPropUnit", all.x = TRUE)
tempChecker <- checker[is.na(checker$PropertyCode),]
checker3 <- merge(checker, checker2, by.x = "argPropLease", by.y = "argPropLease",all.x = TRUE)
checker4 <- subset(checker3, subset = is.na(PropertyCode.x) & is.na(PropertyCode.y))
checker4 <- checker4[,c(1:6)]
colnames(checker4) <- c("ArgusPropLease","Property Name","Property Code","Lease ID","Tenant Name","Rental Value (ERV)")
checker4 <- unique(checker4)
# Return the processed data
return(processedData)
})
output$download <- downloadHandler(
"processed_file.xlsx"
# Return the processed data
return(processedData)
library(shiny)
ui <- fluidPage(
titlePanel("Hello World")
)
runApp('Shiny/Shiny-Checker')
runApp('Shiny/Shiny-Checker')
?fileInput
gc()
runApp('Shiny/Shiny-Checker')
runApp('Shiny/Shiny-Checker')
processedData
runApp('Shiny/Shiny-Checker')
processedData
runApp('Shiny/Shiny-Checker')
runApp('Shiny/Shiny-Checker')
runApp('Shiny/Shiny-Checker')
runApp('Shiny/Shiny-Checker')
install.packages(c("shinylive","httpuv"))
shinylive::export(appdir = "myapp", destdir = "docs")
shinylive::export(appdir = "Shiny", destdir = "docs")
shinylive::export(appdir = "Shiny-Checker", destdir = "docs")
shinylive::export(appdir = "Shiny", destdir = "Shiny-Checker")
shinylive::export(appdir = "C:\Users\Sghosh9\OneDrive - CBRE, Inc\Desktop\Code Checker Trial\Shiny\Shiny-Checker", destdir = "docs")
setwd("C:\Users\Sghosh9\OneDrive - CBRE, Inc\Desktop\Code Checker Trial\Shiny\Shiny-Checker")
knitr::opts_chunk$set(echo = TRUE)
setwd("C:/Users/Sghosh9/OneDrive - CBRE, Inc/Desktop/Code Checker Trial")
setwd("C:/Users/Sghosh9/OneDrive - CBRE, Inc/Desktop/Code Checker Trial/Shiny/Shiny-Checker")
shinylive::export(appdir = "Shiny-Checker", destdir = "docs")
shinylive::export(appdir = "Shiny", destdir = "docs")
shinylive::export()
shinylive::export(appdir = "", destdir = "Shiny-Checker")
dev.off()
dev.off()
set.wd("C:/Users/Sghosh9/OneDrive - CBRE, Inc/Desktop/Code Checker Trial/Shiny/Shiny-Checker")
setwd("C:/Users/Sghosh9/OneDrive - CBRE, Inc/Desktop/Code Checker Trial/Shiny/Shiny-Checker")
shinylive::export(appdir = "Shiny-Checker",destdir = "docs")
?shinylive::export
system.file()
shinylive::export(appdir = "C:/Users/Sghosh9/OneDrive - CBRE, Inc/Desktop/Code Checker Trial/Shiny/Shiny-Checker", destdir = "C:/Users/Sghosh9/OneDrive - CBRE, Inc/Desktop/Code Checker Trial/Shiny/Shiny-Checker/docs")
httpuv::runStaticServer("docs/", port=8008)
